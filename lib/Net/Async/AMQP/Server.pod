=for comment POD_DERIVED_INDEX_GENERATED
The following documentation is automatically generated.  Please do not edit
this file, but rather the original, inline with Net::Async::AMQP::Server
at lib/Net/Async/AMQP/Server.pm
(on the system that originally ran this).
If you do edit this file, and don't want your changes to be removed, make
sure you change the first line.

=encoding utf8

=cut

=head1 NAME

Net::Async::AMQP::Server

=head1 VERSION

version 0.016

=head1 SYNOPSIS

=head1 DESCRIPTION

=head2 configure

Set up the instance.

Takes the following named parameters:

=over 4

=item * local_host

=item * port

=back

=head2 local_host

Accessor for the current local_host setting.

=head2 port

Accessor for the current port setting

=head2 listening

Resolves with the listener.

=head2 notifier_name

=head2 on_listen

Called when we have a listening socket.

=head2 _add_to_loop

=head2 on_accept

=head1 INHERITED METHODS

=over 4

=item L<IO::Async::Listener>

L<acceptor|IO::Async::Listener/acceptor>, L<family|IO::Async::Listener/family>, L<is_listening|IO::Async::Listener/is_listening>, L<listen|IO::Async::Listener/listen>, L<on_read_ready|IO::Async::Listener/on_read_ready>, L<sockname|IO::Async::Listener/sockname>, L<socktype|IO::Async::Listener/socktype>

=item L<IO::Async::Handle>

L<bind|IO::Async::Handle/bind>, L<close|IO::Async::Handle/close>, L<close_read|IO::Async::Handle/close_read>, L<close_write|IO::Async::Handle/close_write>, L<connect|IO::Async::Handle/connect>, L<new_close_future|IO::Async::Handle/new_close_future>, L<read_fileno|IO::Async::Handle/read_fileno>, L<read_handle|IO::Async::Handle/read_handle>, L<set_handle|IO::Async::Handle/set_handle>, L<set_handles|IO::Async::Handle/set_handles>, L<socket|IO::Async::Handle/socket>, L<want_readready|IO::Async::Handle/want_readready>, L<want_writeready|IO::Async::Handle/want_writeready>, L<write_fileno|IO::Async::Handle/write_fileno>, L<write_handle|IO::Async::Handle/write_handle>

=item L<IO::Async::Notifier>

L<add_child|IO::Async::Notifier/add_child>, L<adopt_future|IO::Async::Notifier/adopt_future>, L<can_event|IO::Async::Notifier/can_event>, L<children|IO::Async::Notifier/children>, L<configure_unknown|IO::Async::Notifier/configure_unknown>, L<debug_printf|IO::Async::Notifier/debug_printf>, L<get_loop|IO::Async::Notifier/get_loop>, L<invoke_error|IO::Async::Notifier/invoke_error>, L<invoke_event|IO::Async::Notifier/invoke_event>, L<loop|IO::Async::Notifier/loop>, L<make_event_cb|IO::Async::Notifier/make_event_cb>, L<maybe_invoke_event|IO::Async::Notifier/maybe_invoke_event>, L<maybe_make_event_cb|IO::Async::Notifier/maybe_make_event_cb>, L<new|IO::Async::Notifier/new>, L<parent|IO::Async::Notifier/parent>, L<remove_child|IO::Async::Notifier/remove_child>, L<remove_from_parent|IO::Async::Notifier/remove_from_parent>

=back

=head1 AUTHOR

Tom Molesworth <cpan@perlsite.co.uk>

=head1 LICENSE

Licensed under the same terms as Perl itself, with additional licensing
terms for the MQ spec to be found in C<share/amqp0-9-1.extended.xml>
('a worldwide, perpetual, royalty-free, nontransferable, nonexclusive
license to (i) copy, display, distribute and implement the Advanced
Messaging Queue Protocol ("AMQP") Specification').
